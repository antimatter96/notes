{
  "swagger": "2.0",
  "info": {
    "description": "API for the proxy for the new SCP",
    "version": "0.1.0",
    "title": "Savings Cost Predictor Proxy"
  },
  "host": "proxy.scp.url",
  "basePath": "/",
  "tags": [
    {
      "name": "Healthcheck",
      "description": "Status of service"
    },
    {
      "name": "Onboarding",
      "description": "For new customers"
    },
    {
      "name": "Captcha",
      "description": "For verifying users"
    }
  ],
  "paths": {
    "/captcha-verify": {
      "post": {
        "tags": [
          "Captcha"
        ],
        "summary": "Verifies from google if user is human",
        "description": "Bot check and stores temp user data",
        "operationId": "CaptchaVerify",
        "produces": [
          "text/plain; charset=utf-8"
        ],
        "responses": {
          "200": {
            "description": "Everything is OK. Cookie has been set"
          },
          "400": {
            "description": "Malformed Data or missing fields"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/aws/healthcheck": {
      "get": {
        "tags": [
          "Healthcheck"
        ],
        "summary": "Returns service status",
        "description": "Checks if our APIs are online",
        "operationId": "getStatus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "userData",
            "in": "body",
            "required": true,
            "description": "JSON object containing the user information",
            "schema": {
              "$ref": "#/definitions/CaptchaInputData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All services online"
          },
          "401": {
            "description": "User is not verified as human"
          },
          "500": {
            "description": "Something is wrong"
          }
        }
      }
    },
    "/aws/account/register": {
      "post": {
        "tags": [
          "Onboarding"
        ],
        "summary": "Registers user and emails report",
        "description": "Registers the users in our database. Actual computation takes place at this and is emailed to the user",
        "operationId": "awsRegister",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "userData",
            "in": "body",
            "required": true,
            "description": "JSON object containing the user information",
            "schema": {
              "$ref": "#/definitions/UserData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details saved"
          },
          "400": {
            "description": "Data sent was not of correct format"
          },
          "401": {
            "description": "User is not verified as human"
          }
        }
      }
    },
    "/aws/account/new": {
      "get": {
        "tags": [
          "Onboarding"
        ],
        "summary": "Get new UUID and CF template link",
        "description": "Generates a CF template and embeds in it a UUID and uploads it to S3.",
        "operationId": "awsNew",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Generated Data",
            "schema": {
              "$ref": "#/definitions/GeneratedData"
            }
          },
          "401": {
            "description": "User is not verified as human"
          },
          "500": {
            "description": "Error in uploading CF template to S3"
          }
        }
      }
    },
    "/aws/account/{UUID}": {
      "get": {
        "tags": [
          "Onboarding"
        ],
        "summary": "Checks if RoleARN has been received",
        "description": "This API is called continously to check if the user has created the stack and RoleARN has been sent by AWS SNS",
        "operationId": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "UUID",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "UUID of the UUID:RoleARN mapping"
          }
        ],
        "responses": {
          "200": {
            "description": "The RoleARN of the corresponding",
            "schema": {
              "$ref": "#/definitions/RoleArnData"
            }
          },
          "400": {
            "description": "UUID is not correct"
          },
          "401": {
            "description": "User is not verified as human"
          },
          "404": {
            "description": "The RoleARN has not yet been delivered by SNS'"
          }
        }
      }
    }
  },
  "definitions": {
    "CaptchaInputData": {
      "type": "object",
      "properties": {
        "response": {
          "type": "string",
          "description": "Given by Google to verify user"
        },
        "username": {
          "type": "string",
          "example": "John Doe"
        },
        "email": {
          "type": "string",
          "example": "abc@xyz.com"
        }
      }
    },
    "GeneratedData": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "example": "070a62a7-3000-4eb3-88cb-6f7507695364",
          "description": "A version 4 UUID. Assigned to every new user.Used to map email/name to roleARN"
        },
        "templateLink": {
          "type": "string",
          "example": "https://s3.amazonaws.com/scp-test/test-cf-070a62a7-3000-4eb3-88cb-6f7507695364.template",
          "description": "Generated CF template link hosted on S3"
        }
      }
    },
    "RoleArnData": {
      "type": "object",
      "properties": {
        "RoleARN": {
          "type": "string",
          "example": "arn:aws:iam:9999999:role/batchly/batchly-trusted",
          "description": "RoleARN generated by AWS for us to access AWS info for a particular customer"
        }
      }
    },
    "UserData": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "example": "John Doe"
        },
        "email": {
          "type": "string",
          "example": "abc@xyz.com"
        },
        "RoleARN": {
          "type": "string",
          "example": "arn:aws:iam:9999999:role/batchly/batchly-trusted",
          "description": "RoleARN generated by AWS for us to access AWS info for a particular customer"
        },
        "UUID": {
          "type": "string",
          "example": "070a62a7-3000-4eb3-88cb-6f7507695364",
          "description": "A version 4 UUID.Assigned to every new user.Used to map email/name to roleARN"
        },
        "organisation": {
          "type": "string",
          "example": "Swiggy"
        }
      }
    }
  }
}
